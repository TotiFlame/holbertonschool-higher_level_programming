The "7-base_geometry" module
============================

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> BaseGeometry.integer_validator("name", "hola")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> BaseGeometry.integer_validator()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: integer_validator() missing 3 required positional arguments: 'self', 'name', and 'value'

>>> BaseGeometry.integer_validator(12)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> BaseGeometry.area("test")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/totiflame/Holberton/holbertonschool-higher_level_programming/python-inheritance/7-base_geometry.py", line 9, in area
    raise Exception("area() is not implemented")
Exception: area() is not implemented

>>> BaseGeometry.integer_validator("age", 0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> BaseGeometry.integer_validator("age", -10)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> BaseGeometry.integer_validator("age", [1])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: integer_validator() missing 1 required positional argument: 'value'