The "7-base_geometry" module
============================

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> test = BaseGeometry()

>>> test.integer_validator("name", "toti")
Traceback (most recent call last):
TypeError: name must be an integer

>>> test.area()
Traceback (most recent call last):
Exception: area() is not implemented

>>> test.integer_validator("age", 1)

>>> test.integer_validator()
Traceback (most recent call last):
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> test.integer_validator(12)
Traceback (most recent call last):
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> test.integer_validator("test")
Traceback (most recent call last):
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> test.integer_validator("age", (4,))
Traceback (most recent call last):
TypeError: age must be an integer

>>> test.integer_validator("age", True)
Traceback (most recent call last):
TypeError: age must be an integer

>>> test.integer_validator("age", 0)
Traceback (most recent call last):
ValueError: age must be greater than 0

>>> test.integer_validator("age", -10)
Traceback (most recent call last):
ValueError: age must be greater than 0

>>> test.integer_validator("age", [1])
Traceback (most recent call last):
TypeError: age must be an integer

>>> test.integer_validator("age", None)
Traceback (most recent call last):
TypeError: age must be an integer

>>> test.integer_validator("age", {3, 4})
Traceback (most recent call last):
TypeError: age must be an integer